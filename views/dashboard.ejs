<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WhatsApp Monitor Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Inter', sans-serif; }
        .status-dot { 
            width: 8px; 
            height: 8px; 
            border-radius: 50%; 
            display: inline-block; 
            margin-right: 8px;
        }
        .status-connected { background-color: #10b981; }
        .status-disconnected { background-color: #ef4444; }
        .status-qr { background-color: #f59e0b; }
        .message-row:hover { background-color: #f8fafc; }
        .fade-in { 
            animation: fadeIn 0.3s ease-in;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Header -->
    <header class="bg-white shadow-sm border-b">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-4">
                <div class="flex items-center space-x-4">
                    <h1 class="text-2xl font-bold text-gray-900">WhatsApp Monitor</h1>
                    <div class="flex items-center">
                        <span class="status-dot status-<%= connectionStatus === 'connected' ? 'connected' : connectionStatus === 'qr_ready' ? 'qr' : 'disconnected' %>" id="status-dot"></span>
                        <span class="text-sm text-gray-600" id="status-text">
                            <%= connectionStatus === 'connected' ? 'Connected' : connectionStatus === 'qr_ready' ? 'Scan QR Code' : 'Disconnected' %>
                        </span>
                    </div>
                </div>
                <div class="flex items-center space-x-4">
                    <div class="text-sm text-gray-500">
                        <span class="font-medium" id="total-messages"><%= stats.total_messages %></span> messages
                    </div>
                    <div class="text-sm text-gray-500">
                        <span class="font-medium" id="active-channels"><%= stats.active_channels %></span> channels
                    </div>
                </div>
            </div>
        </div>
    </header>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Add Channel Form -->
        <div class="bg-white rounded-lg shadow-sm p-6 mb-8">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">Add Monitoring Channel</h2>
            <form method="POST" action="/channels" class="flex gap-4">
                <input 
                    name="jid" 
                    class="flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                    placeholder="Channel JID (e.g., 12345@g.us or 1234567890@s.whatsapp.net)" 
                    required
                >
                <input 
                    name="label" 
                    class="w-64 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                    placeholder="Channel Label (optional)"
                >
                <button type="submit" class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                    Add Channel
                </button>
            </form>
            <p class="text-sm text-gray-500 mt-2">
                ⚠️ Only monitor channels you own or have explicit permission to monitor
            </p>
        </div>

        <!-- Monitoring Channels -->
        <div class="bg-white rounded-lg shadow-sm p-6 mb-8">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">Monitored Channels</h2>
            <% if (channels.length === 0) { %>
                <p class="text-gray-500 text-center py-8">No channels added yet. Add a channel above to start monitoring.</p>
            <% } else { %>
                <div class="overflow-x-auto">
                    <table class="w-full">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Channel</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">JID</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Messages</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Activity</th>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <% channels.forEach(channel => { %>
                                <tr class="hover:bg-gray-50">
                                    <td class="px-4 py-3">
                                        <div class="flex items-center">
                                            <div class="flex-shrink-0 h-2 w-2 rounded-full <%= channel.is_active ? 'bg-green-400' : 'bg-gray-400' %> mr-3"></div>
                                            <div class="text-sm font-medium text-gray-900"><%= channel.label %></div>
                                        </div>
                                    </td>
                                    <td class="px-4 py-3 text-sm text-gray-500 font-mono"><%= channel.jid %></td>
                                    <td class="px-4 py-3 text-sm text-gray-900"><%= channel.message_count || 0 %></td>
                                    <td class="px-4 py-3 text-sm text-gray-500">
                                        <%= channel.last_message_at ? new Date(channel.last_message_at).toLocaleString() : 'Never' %>
                                    </td>
                                    <td class="px-4 py-3 text-sm space-x-2">
                                        <a href="/?channel=<%= encodeURIComponent(channel.jid) %>" 
                                           class="text-blue-600 hover:text-blue-800">View</a>
                                        <form method="POST" action="/channels/delete" class="inline">
                                            <input type="hidden" name="id" value="<%= channel.id %>">
                                            <button type="submit" 
                                                    class="text-red-600 hover:text-red-800"
                                                    onclick="return confirm('Are you sure you want to delete this channel?')">
                                                Delete
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            <% } %>
        </div>

        <!-- Filters -->
        <div class="bg-white rounded-lg shadow-sm p-6 mb-8">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">Message Filters</h2>
            <form method="GET" action="/" class="flex gap-4">
                <select name="channel" class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
                    <option value="">All Channels</option>
                    <% channels.forEach(channel => { %>
                        <option value="<%= channel.jid %>" <%= channelFilter === channel.jid ? 'selected' : '' %>>
                            <%= channel.label %>
                        </option>
                    <% }) %>
                </select>
                <input 
                    name="search" 
                    value="<%= searchQuery %>"
                    class="flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                    placeholder="Search messages..."
                >
                <button type="submit" class="px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors">
                    Filter
                </button>
                <a href="/" class="px-6 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition-colors">
                    Clear
                </a>
            </form>
        </div>

        <!-- Messages -->
        <div class="bg-white rounded-lg shadow-sm">
            <div class="p-6 border-b border-gray-200">
                <h2 class="text-lg font-semibold text-gray-900">Recent Messages</h2>
                <p class="text-sm text-gray-500 mt-1">
                    <% if (channelFilter) { %>
                        Showing messages from: <span class="font-medium"><%= channelFilter %></span>
                    <% } else { %>
                        Showing latest 200 messages from all channels
                    <% } %>
                </p>
            </div>
            
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Time</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Sender</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Channel</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Content</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200" id="messages-body">
                        <% if (messages.length === 0) { %>
                            <tr>
                                <td colspan="5" class="px-6 py-8 text-center text-gray-500">
                                    No messages found. Start monitoring channels to see messages here.
                                </td>
                            </tr>
                        <% } else { %>
                            <% messages.forEach(message => { %>
                                <tr class="message-row">
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <%= new Date(message.timestamp).toLocaleString() %>
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-900 max-w-xs truncate">
                                        <%= message.sender %>
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-500 font-mono max-w-xs truncate">
                                        <%= message.target_channel %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="px-2 py-1 text-xs font-medium rounded-full 
                                            <%= message.type === 'group' ? 'bg-blue-100 text-blue-800' : 
                                                message.type === 'outgoing' ? 'bg-green-100 text-green-800' : 
                                                'bg-gray-100 text-gray-800' %>">
                                            <%= message.type %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-900 max-w-md">
                                        <div class="truncate"><%= message.content %></div>
                                    </td>
                                </tr>
                            <% }) %>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Toast Notifications -->
        <div id="toast-container" class="fixed top-4 right-4 z-50 space-y-2"></div>
    </div>

    <script>
        // Socket.io connection
        const socket = io();
        let messageCount = <%= stats.total_messages %>;

        // Update connection status
        socket.on('connection_status', (data) => {
            const statusDot = document.getElementById('status-dot');
            const statusText = document.getElementById('status-text');
            
            statusDot.className = 'status-dot status-' + 
                (data.status === 'connected' ? 'connected' : 
                 data.status === 'qr_ready' ? 'qr' : 'disconnected');
            
            statusText.textContent = 
                data.status === 'connected' ? 'Connected' :
                data.status === 'qr_ready' ? 'Scan QR Code' : 'Disconnected';
        });

        // Handle new messages
        socket.on('new_message', (message) => {
            const tbody = document.getElementById('messages-body');
            const noMessagesRow = tbody.querySelector('td[colspan="5"]');
            
            // Remove "no messages" row if it exists
            if (noMessagesRow) {
                noMessagesRow.parentElement.remove();
            }
            
            const tr = document.createElement('tr');
            tr.className = 'message-row fade-in';
            tr.innerHTML = `
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    ${message.formatted_time}
                </td>
                <td class="px-6 py-4 text-sm text-gray-900 max-w-xs truncate">
                    ${escapeHtml(message.sender)}
                </td>
                <td class="px-6 py-4 text-sm text-gray-500 font-mono max-w-xs truncate">
                    ${escapeHtml(message.target_channel)}
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                    <span class="px-2 py-1 text-xs font-medium rounded-full ${getTypeClass(message.type)}">
                        ${message.type}
                    </span>
                </td>
                <td class="px-6 py-4 text-sm text-gray-900 max-w-md">
                    <div class="truncate">${escapeHtml(message.content)}</div>
                </td>
            `;
            
            tbody.insertBefore(tr, tbody.firstChild);
            
            // Update message count
            messageCount++;
            document.getElementById('total-messages').textContent = messageCount;
            
            // Show toast notification
            showToast(`New message from ${message.sender}`, 'success');
            
            // Keep only last 200 rows
            const rows = tbody.querySelectorAll('tr');
            if (rows.length > 200) {
                rows[rows.length - 1].remove();
            }
        });

        // Utility functions
        function escapeHtml(text) {
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }

        function getTypeClass(type) {
            switch(type) {
                case 'group': return 'bg-blue-100 text-blue-800';
                case 'outgoing': return 'bg-green-100 text-green-800';
                default: return 'bg-gray-100 text-gray-800';
            }
        }

        function showToast(message, type = 'info') {
            const container = document.getElementById('toast-container');
            const toast = document.createElement('div');
            toast.className = `bg-white border border-gray-200 rounded-lg shadow-lg p-4 max-w-sm fade-in`;
            toast.innerHTML = `
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-2 h-2 rounded-full ${type === 'success' ? 'bg-green-400' : 'bg-blue-400'}"></div>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm text-gray-900">${message}</p>
                    </div>
                    <button onclick="this.parentElement.parentElement.remove()" class="ml-4 text-gray-400 hover:text-gray-600">
                        ×
                    </button>
                </div>
            `;
            
            container.appendChild(toast);
            
            // Auto remove after 5 seconds
            setTimeout(() => {
                toast.remove();
            }, 5000);
        }

        // Auto-refresh stats every 30 seconds
        setInterval(() => {
            socket.emit('request_stats');
        }, 30000);
    </script>
</body>
</html>